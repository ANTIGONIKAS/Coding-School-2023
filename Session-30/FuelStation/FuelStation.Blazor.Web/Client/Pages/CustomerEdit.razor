@page "/customerlist/edit/{Id:int?}" 
@using FuelStation.Blazor.Web.Shared;
@using FuelStation.Model;
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>Customer Edit</h3>

@if (customer == null)
{
    <p>Loading ...</p>

}
else
{
<div class="row">
    <div class="col-md-6">
            <label class="form-label">Name</label>
            <input class="form-control" @bind="@customer.Name" />
   

    </div>

    
        <div class="col-md-6">
     <label class="form-label">Surname</label>
    <input class="form-control" @bind="@customer.Surname"/>


        </div>
        
        <div class="col-md-6">
            <label class="form-label">CardNumber</label>
            <input class="form-control" @bind="@customer.CardNumber" />
    </div>
    </div>


<div class="row mt-2">
        <div class="col">
    <button class="btn btn-success" @onclick="OnSave">Save</button>
    <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
</div>
</div>

}

@code {
    [Parameter] public int? Id { get; set; }
    CustomerEditDto customer { get; set; }
   
    protected override async Task OnInitializedAsync()
    {
        await LoadItemsFromServer();
      
        //if (Id == null)
        //{
        //    customer = new();
        //}
        //else
        //{
        //    customer = await httpClient.GetFromJsonAsync<CustomerEditDto>($"customer/{Id}");
        //}

    }
    private async Task LoadItemsFromServer()
    {
        if (Id.HasValue)
            customer = await httpClient.GetFromJsonAsync<CustomerEditDto>($"customer/{Id}");
    }
  
    private void OnCancel()
    {
        navigationManager.NavigateTo("customerList");
    }
    private async Task OnSave()
    {
        HttpResponseMessage? response = null;
       
        if (Id == null)
        {
            response = await httpClient.PostAsJsonAsync("customer", customer);

        }
        else
        {
            response = await httpClient.PutAsJsonAsync("customer", customer);

        }
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("customerList");
    }

//    private async Task OnUpdate()
//    {
//        HttpResponseMessage? response;
//        response = await httpClient.PutAsJsonAsync("customer", customer);
//        response.EnsureSuccessStatusCode();
//        navigationManager.NavigateTo("customerlist");

//}

}